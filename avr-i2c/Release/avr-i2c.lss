
avr-i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000021e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000021e  00000292  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000292  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  000007e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000c89  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000ca3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <main>
  64:	0c 94 0d 01 	jmp	0x21a	; 0x21a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <I2C_MasterInit>:
  6c:	11 b8       	out	0x01, r1	; 1
  6e:	87 e4       	ldi	r24, 0x47	; 71
  70:	80 b9       	out	0x00, r24	; 0
  72:	84 e0       	ldi	r24, 0x04	; 4
  74:	86 bf       	out	0x36, r24	; 54
  76:	08 95       	ret

00000078 <I2C_Start>:
  78:	84 ea       	ldi	r24, 0xA4	; 164
  7a:	86 bf       	out	0x36, r24	; 54
  7c:	06 b6       	in	r0, 0x36	; 54
  7e:	07 fe       	sbrs	r0, 7
  80:	fd cf       	rjmp	.-6      	; 0x7c <I2C_Start+0x4>
  82:	08 95       	ret

00000084 <I2C_Stop>:
  84:	84 e9       	ldi	r24, 0x94	; 148
  86:	86 bf       	out	0x36, r24	; 54
  88:	08 95       	ret

0000008a <I2C_SendData>:
  8a:	83 b9       	out	0x03, r24	; 3
  8c:	84 e8       	ldi	r24, 0x84	; 132
  8e:	86 bf       	out	0x36, r24	; 54
  90:	06 b6       	in	r0, 0x36	; 54
  92:	07 fe       	sbrs	r0, 7
  94:	fd cf       	rjmp	.-6      	; 0x90 <I2C_SendData+0x6>
  96:	08 95       	ret

00000098 <I2C_SendSlaveAddress>:
  98:	86 2b       	or	r24, r22
  9a:	0c 94 45 00 	jmp	0x8a	; 0x8a <I2C_SendData>

0000009e <I2C_GetData>:
  9e:	24 ec       	ldi	r18, 0xC4	; 196
  a0:	61 30       	cpi	r22, 0x01	; 1
  a2:	09 f0       	breq	.+2      	; 0xa6 <I2C_GetData+0x8>
  a4:	24 e8       	ldi	r18, 0x84	; 132
  a6:	26 bf       	out	0x36, r18	; 54
  a8:	06 b6       	in	r0, 0x36	; 54
  aa:	07 fe       	sbrs	r0, 7
  ac:	fd cf       	rjmp	.-6      	; 0xa8 <I2C_GetData+0xa>
  ae:	23 b1       	in	r18, 0x03	; 3
  b0:	fc 01       	movw	r30, r24
  b2:	20 83       	st	Z, r18
  b4:	08 95       	ret

000000b6 <Rtc_Init>:
  b6:	0e 94 36 00 	call	0x6c	; 0x6c <I2C_MasterInit>
  ba:	0e 94 3c 00 	call	0x78	; 0x78 <I2C_Start>
  be:	60 e0       	ldi	r22, 0x00	; 0
  c0:	80 ed       	ldi	r24, 0xD0	; 208
  c2:	0e 94 4c 00 	call	0x98	; 0x98 <I2C_SendSlaveAddress>
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
  cc:	0c 94 42 00 	jmp	0x84	; 0x84 <I2C_Stop>

000000d0 <Rtc_GetTime>:
  d0:	ef 92       	push	r14
  d2:	ff 92       	push	r15
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	ec 01       	movw	r28, r24
  de:	8b 01       	movw	r16, r22
  e0:	7a 01       	movw	r14, r20
  e2:	0e 94 3c 00 	call	0x78	; 0x78 <I2C_Start>
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	80 ed       	ldi	r24, 0xD0	; 208
  ea:	0e 94 4c 00 	call	0x98	; 0x98 <I2C_SendSlaveAddress>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
  f4:	0e 94 42 00 	call	0x84	; 0x84 <I2C_Stop>
  f8:	0e 94 3c 00 	call	0x78	; 0x78 <I2C_Start>
  fc:	61 e0       	ldi	r22, 0x01	; 1
  fe:	80 ed       	ldi	r24, 0xD0	; 208
 100:	0e 94 4c 00 	call	0x98	; 0x98 <I2C_SendSlaveAddress>
 104:	61 e0       	ldi	r22, 0x01	; 1
 106:	c7 01       	movw	r24, r14
 108:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_GetData>
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	c8 01       	movw	r24, r16
 110:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_GetData>
 114:	60 e0       	ldi	r22, 0x00	; 0
 116:	ce 01       	movw	r24, r28
 118:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_GetData>
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	1f 91       	pop	r17
 122:	0f 91       	pop	r16
 124:	ff 90       	pop	r15
 126:	ef 90       	pop	r14
 128:	0c 94 42 00 	jmp	0x84	; 0x84 <I2C_Stop>

0000012c <Rtc_SetTime>:
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	c8 2f       	mov	r28, r24
 134:	d6 2f       	mov	r29, r22
 136:	14 2f       	mov	r17, r20
 138:	0e 94 3c 00 	call	0x78	; 0x78 <I2C_Start>
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	80 ed       	ldi	r24, 0xD0	; 208
 140:	0e 94 4c 00 	call	0x98	; 0x98 <I2C_SendSlaveAddress>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
 14a:	81 2f       	mov	r24, r17
 14c:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
 150:	8d 2f       	mov	r24, r29
 152:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
 156:	8c 2f       	mov	r24, r28
 158:	0e 94 45 00 	call	0x8a	; 0x8a <I2C_SendData>
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	0c 94 42 00 	jmp	0x84	; 0x84 <I2C_Stop>

00000166 <Usart_Init>:
 166:	88 e0       	ldi	r24, 0x08	; 8
 168:	8a b9       	out	0x0a, r24	; 10
 16a:	86 e8       	ldi	r24, 0x86	; 134
 16c:	80 bd       	out	0x20, r24	; 32
 16e:	83 e3       	ldi	r24, 0x33	; 51
 170:	89 b9       	out	0x09, r24	; 9
 172:	08 95       	ret

00000174 <Usart_Transmit>:
 174:	5d 9b       	sbis	0x0b, 5	; 11
 176:	fe cf       	rjmp	.-4      	; 0x174 <Usart_Transmit>
 178:	8c b9       	out	0x0c, r24	; 12
 17a:	08 95       	ret

0000017c <SendTimeToUsart>:
 17c:	1f 93       	push	r17
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	18 2f       	mov	r17, r24
 184:	d6 2f       	mov	r29, r22
 186:	c4 2f       	mov	r28, r20
 188:	82 95       	swap	r24
 18a:	8f 70       	andi	r24, 0x0F	; 15
 18c:	80 5d       	subi	r24, 0xD0	; 208
 18e:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 192:	81 2f       	mov	r24, r17
 194:	8f 70       	andi	r24, 0x0F	; 15
 196:	80 5d       	subi	r24, 0xD0	; 208
 198:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 19c:	8a e3       	ldi	r24, 0x3A	; 58
 19e:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1a2:	8d 2f       	mov	r24, r29
 1a4:	82 95       	swap	r24
 1a6:	8f 70       	andi	r24, 0x0F	; 15
 1a8:	80 5d       	subi	r24, 0xD0	; 208
 1aa:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1ae:	8d 2f       	mov	r24, r29
 1b0:	8f 70       	andi	r24, 0x0F	; 15
 1b2:	80 5d       	subi	r24, 0xD0	; 208
 1b4:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1b8:	8a e3       	ldi	r24, 0x3A	; 58
 1ba:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1be:	8c 2f       	mov	r24, r28
 1c0:	82 95       	swap	r24
 1c2:	8f 70       	andi	r24, 0x0F	; 15
 1c4:	80 5d       	subi	r24, 0xD0	; 208
 1c6:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1ca:	8c 2f       	mov	r24, r28
 1cc:	8f 70       	andi	r24, 0x0F	; 15
 1ce:	80 5d       	subi	r24, 0xD0	; 208
 1d0:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1d4:	8d e0       	ldi	r24, 0x0D	; 13
 1d6:	0e 94 ba 00 	call	0x174	; 0x174 <Usart_Transmit>
 1da:	8a e0       	ldi	r24, 0x0A	; 10
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	1f 91       	pop	r17
 1e2:	0c 94 ba 00 	jmp	0x174	; 0x174 <Usart_Transmit>

000001e6 <main>:
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	00 d0       	rcall	.+0      	; 0x1ec <main+0x6>
 1ec:	1f 92       	push	r1
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	0e 94 b3 00 	call	0x166	; 0x166 <Usart_Init>
 1f6:	0e 94 5b 00 	call	0xb6	; 0xb6 <Rtc_Init>
 1fa:	ae 01       	movw	r20, r28
 1fc:	4d 5f       	subi	r20, 0xFD	; 253
 1fe:	5f 4f       	sbci	r21, 0xFF	; 255
 200:	be 01       	movw	r22, r28
 202:	6e 5f       	subi	r22, 0xFE	; 254
 204:	7f 4f       	sbci	r23, 0xFF	; 255
 206:	ce 01       	movw	r24, r28
 208:	01 96       	adiw	r24, 0x01	; 1
 20a:	0e 94 68 00 	call	0xd0	; 0xd0 <Rtc_GetTime>
 20e:	4b 81       	ldd	r20, Y+3	; 0x03
 210:	6a 81       	ldd	r22, Y+2	; 0x02
 212:	89 81       	ldd	r24, Y+1	; 0x01
 214:	0e 94 be 00 	call	0x17c	; 0x17c <SendTimeToUsart>
 218:	f0 cf       	rjmp	.-32     	; 0x1fa <main+0x14>

0000021a <_exit>:
 21a:	f8 94       	cli

0000021c <__stop_program>:
 21c:	ff cf       	rjmp	.-2      	; 0x21c <__stop_program>
